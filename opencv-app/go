#!/usr/bin/env bash

set -e
TASK=$1
ARGS=${@:2}

help__pullDependency="pull dependencics"
task_pullDependency() {
  sudo apt-get install -y python3-pip
  sudo apt-get install -y python3-opencv

  sudo pip3 install --break-system-packages -r requirements.txt
}

help__testCamera="run test for opencv app"
task_testCamera() {
  PYTHONPATH=./src python3 test/service/camera_test.py $1
}

help__runcvAppPreview="run test for opencv app"
task_runcvAppPreview() {
  PYTHONPATH=./src python3 src/main.py
}

help__deployApp="setup & run opencv app"
task_deployApp() {
  ## Copy script to systemd
  sudo cp script/ai_board.service /etc/systemd/system/ai_board.service

  ## Enable and start the service
  sudo systemctl enable ai_board.service
  sudo systemctl start ai_board.service

  ## Check the status of the service
  sudo systemctl status ai_board.service
}

help__statusApp="status opencv app"
task_statusApp() {
  sudo systemctl status ai_board.service
}

help__logApp="log opencv app"
task_logApp() {
  sudo journalctl -u ai_board.service -f
}

help__stopApp="stop opencv app"
task_stopApp() {
  sudo systemctl stop ai_board.service
}


## main
list_all_helps() {
  compgen -v | egrep "^help__.*"
}

NEW_LINE=$'\n'
if type -t "task_$TASK" &>/dev/null; then
  task_${TASK} ${ARGS}
else
  echo "usage: $0 <task> [<..args>]"
  echo "task:"

  HELPS=""
  for help in $(list_all_helps); do

    HELPS="$HELPS    ${help/help__/} |-- ${!help}$NEW_LINE"
  done

  echo "$HELPS" | column -t -s "|"
  exit 1
fi
